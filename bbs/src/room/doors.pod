
=pod

=head1 NAME

doors - A ANSI C class to manage room resources

=head1 SYNOPSIS

 static int _attach_handler(room_t *self, room_base_t *room) {

     int stat = OK;
     handler_t *handler = (handler_t *)self->handler;

     when_error_in {

         if (handler == NULL) {

             if (room->flags & RM_SUBSYS) {

                 handler = doors_create(self->roomdb, room->path, room->retries, room->timeout, room->base, self->trace);
                 check_creation(handler);

             }

         }

         if (handler != NULL) {

             stat = handler_attach(handler, room);
             check_return(stat, handler);

         }

         self->handler = (void *)handler;

         exit_when;

     } use {

         stat = ERR;
         process_error(self);
 
     } end_when;

     return stat;

 }

=head1 DESCRIPTION

This class implements a door (sub system) resource for rooms. A door
can be used to extend the functionality of the bbs. 

This class overrides methods within the handler class and the object 
returned from doors_create() can be used with any of the other handler
methods.

This library is a class. It is extensible and overridable. It also makes 
use of the L<errors(3)> and L<tracer(3)> classes for error handling and 
reporting. 

The files doors.c and doors.h define the class. 

=over 4

=item B<doors.h>

This defines the interface to the class. 

=item B<doors.c> 

This implements the interface.

=back

=head1 METHODS

=head2 handler_t *doors_create(files_t *db, char *path, int retries, int timeout, int base, tracer_t *dump)

This method initializes the class. 

=over 4

=item B<db>

The pointer to the room database.

=item B<path>

The path to where the doors are stored. 

=item B<retires>

The number of retires for file locking.

=item B<timeout>

The wait time in seconds between retires.

=item B<dump>

A pointer to a tracer_t object to manage a trace dump.

=back

=head1 RETURNS

The method doors_create() returns a pointer to a handler_t object. 
All other methods return either OK on success or ERR on failure. The 
extended error description can be returned with object_get_error().

=head1 BUILDING

The following assumes a GNU/GCC build environment.

=over 4

=item make

Builds the module and provides an object archive.

=item make clean

Removes cruft from the directory.

=item make man

Builds the man page.

=item make shared

Builds the module and provides a shared library.

=back

=head1 SEE ALSO

=over 4

=item L<room(3)>

=item L<handler(3)>

=item L<msgs(3)>

=item L<object(3)>

=back

=head1 AUTHOR

Kevin L. Esteb, E<lt>kevin@kesteb.usE<gt>

=head1 COPYRIGHT AND LICENSE

Copyright (c) 2021 by Kevin L. Esteb

Permission to use, copy, modify, and distribute this software and its
documentation for any purpose and without fee is hereby granted,
provided that this copyright notice appears in all copies. The
author makes no representations about the suitability of this software
for any purpose. It is provided "as is" without express or implied
warranty.

=cut

