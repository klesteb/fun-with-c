
=pod

=head1 NAME

template - A ANSI C class

=head1 SYNOPSIS

 #include <stdio.h>
 #include "template.h"

 int main(int argc, char **argv) {

     template_t *temp = NULL;

     if ((temp = template_create(NULL))) {

         template_destroy(temp);

     }

     return 0;

 }

=head1 DESCRIPTION

This is a basic class written in ANSI C. It shows a way to implement
object oriented programming. Why do this? It is a nice thought exercise. 

The files template.c and template.h define the class. 

=over 4

=item B<template.h>

This defines the interface to the class. 

=item B<template.c> 

This implements the interface.

=back

The makefile creates a libtemplate.a file that can be used for linkage
with programs.

=head1 METHODS

=head2 template_t *template_create(NULL)

This method initializes the class. It returns a pointer to the
template_t object. Any errors may be returned with object_get_error().

=head2 int template_destroy(template_t *self)

This destroys the object. It returns OK on success and ERR on failure. 
The extended error description can be returned with object_get_error().

=over 4

=item B<self>

A pointer to the template_t object.

=back

=head2 int template_override(template_t *self, item_list_t *items);

This method allows you to override methods. It returns OK on success and
ERR on failure. The extended error description can be returned with
object_get_error().

=over 4

=item B<self>

A pointer to the template_t object.

=item B<items>

An array of item_list_t data types. The array is 0 terminated.

=back

=head2 int template_compare(template_t *this, template_t *that)

This method allows you to compare one template_t object to another. It 
returns OK on success and ERR on failure. The extended error description 
can be returned with object_get_error().

=over 4

=item B<this>

A pointer to a template_t object.

=item B<other>

A pointer to a template_t object.

=back

=head2 char *template_version(template_t *self)

This method returns the version of the library.

=item B<self>

A pointer to the template_t object.

=back

=head1 SEE ALSO

=over 4

=item L<template.h|template.h>

=item L<object|object>

=item L<when.h|when.h>

=item L<item_list.h|item_list.h>

=item L<error_codes.h|error_codes.h>

=item L<error_trace.h|error_trace.h>

=back

=head1 AUTHOR

Kevin L. Esteb, E<lt>kevin@kesteb.usE<gt>

=head1 COPYRIGHT AND LICENSE

Copyright (c) 2020 by Kevin L. Esteb

Permission to use, copy, modify, and distribute this software and its
documentation for any purpose and without fee is hereby granted,
provided that the above copyright notice appears in all copies. The
author makes no representations about the suitability of this software
for any purpose. It is provided "as is" without express or implied
warranty.

=cut

